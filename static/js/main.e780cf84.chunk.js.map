{"version":3,"sources":["asset/play2.mp4","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","ref","Component","BgVid","props","src","autoPlay","loop","muted","Header","Play","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6FAAAA,EAAOC,QAAU,IAA0B,mC,sNCIrCC,E,iLAEF,OACE,yBAAKC,UAAU,MAAMC,IAAI,OACvB,kBAAC,EAAD,MACA,yBAAKD,UAAU,WAAf,8CAEE,6BACC,IACD,6BAJF,oBAME,6BACA,0BAAMA,UAAU,SAAhB,uBACA,mC,GAbQE,aAoBZC,EAAQ,SAAAC,GACZ,OACE,yBAAKJ,UAAU,UACb,2BAAOK,IAAKD,EAAMC,IAAKC,UAAQ,EAACC,MAAI,EAACC,OAAK,MAK1CC,EAAS,WACb,OACE,yBAAKT,UAAU,UACb,kBAAC,EAAD,CAAOK,IAAKK,MACZ,yBAAKV,UAAU,SACb,8DACA,4BACE,yBAAKA,UAAU,WACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,WACb,8CAEE,6BAFF,iBAIE,6BAJF,oBAME,6BANF,2BAQE,6BARF,mBAUE,6BAAM,6BAVR,mBAYE,6BAZF,oBAeE,6BACA,6BAhBF,iBAkBE,6BAlBF,oBAoBE,6BApBF,wBAsBE,6BACA,6BAvBF,2BAyBE,6BAzBF,4BA2BE,6BA3BF,6BA6BE,6BACA,6BA9BF,sBAgCE,6BAhCF,oBAoCF,yBAAKA,UAAU,WACb,mDAGE,6BAHF,0BAKE,6BALF,0BAOE,6BAPF,4BASE,6BACA,6BAVF,qBAWoB,6BAAM,6BAX1B,+BAaE,6BAbF,wBAeE,6BAfF,yBAiBE,6BAjBF,sBAmBE,6BAnBF,oBAqBE,6BArBF,2BAuBE,6BACA,6BAxBF,gCA4BF,yBAAKA,UAAU,WACb,kDAEE,6BAFF,qBAIE,6BAJF,kBAME,6BANF,kBAQE,6BACA,6BATF,4BAWE,6BAXF,wBAaE,6BAbF,oBAeE,6BACA,6BAhBF,wBAkBE,6BAlBF,uBAoBE,6BApBF,iBAsBE,6BACA,6BAvBF,oBAyBE,6BAAM,6BAzBR,oBA2BE,6BA3BF,oBA6BE,6BACA,6BA9BF,iBAgCE,6BAhCF,kBAkCE,6BAlCF,kBAoCE,qCAWHD,IC/IKY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e780cf84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play2.8cfeca1a.mp4\";","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Play from \"./asset/play2.mp4\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\" ref=\"app\">\n        <Header />\n        <div className=\"contact\">\n          Choose the domain(s) you'd like to purchase\n          <br />\n          {\"&\"}\n          <br />\n          Make me an offer:\n          <br />\n          <span className=\"fancy\">mnolan312@gmail.com</span>\n          <br />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst BgVid = props => {\n  return (\n    <div className=\"bg-vid\">\n      <video src={props.src} autoPlay loop muted />\n    </div>\n  );\n};\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <BgVid src={Play} />\n      <div className=\"inner\">\n        <h1>Premium Domain Names for Sale!</h1>\n        <h2>\n          <div className=\"wrapper\">\n            <div className=\"row\">\n              <div className=\"columns\">\n                <div>\n                  godisworld.com\n                  <br />\n                  praytheway.com\n                  <br />\n                  prayforhealth.com\n                  <br />\n                  connectingwithchrist.com\n                  <br />\n                  lovegodtoday.com\n                  <br /><br />\n                  theanswering.com\n                  <br />\n                  guaranteedjoy.com\n                  \n                  <br />\n                  <br />\n                  cellhealer.com\n                  <br />\n                  mobileliquids.com\n                  <br />\n                  flexiblewearables.com\n                  <br />\n                  <br />\n                  micromobilitymedical.com\n                  <br />\n                  micromobilityservices.com\n                  <br />\n                  micromobilitysolutions.com\n                  <br />\n                  <br />\n                  nomansskybeyond.com\n                  <br />\n                  nomansskyvr.com\n                </div>\n              </div>\n              <div className=\"columns\">\n                <div>\n                             \n                  illinoisdruglaw.com\n                  <br />\n                  illinoisdruglawyers.com\n                  <br />\n                  illinoisdruglawsuit.com\n                  <br />\n                  illinoisdrugaddiction.com\n                  <br />\n                  <br />\n                  legitattorneys.com<br /><br />\n                  illinoiscannabisresearch.com\n                  <br />\n                  chicagoweedsupply.com\n                  <br />\n                  chicagoweedconnect.com\n                  <br />\n                  chicagoweedsale.com\n                  <br />\n                  getchicagolit.com\n                  <br />\n                  newagecaredispensary.com\n                  <br />\n                  <br />\n                  chicagoguitarinstructor.com\n                </div>\n              </div>\n              <div className=\"columns\">\n                <div>\n                  unrealhotdeals.com\n                  <br />\n                  liquidcashloan.com\n                  <br />\n                  wecaremoney.com\n                  <br />\n                  liquormoney.com\n                  <br />\n                  <br />\n                  amillionpossibilities.com\n                  <br />\n                  achievegreateness.com\n                  <br />\n                  proveanything.com\n                  <br />\n                  <br />\n                  organichealthdiet.com\n                  <br />\n                  organichealth101.com\n                  <br />\n                  fitliquids.com\n                  <br />\n                  <br />\n                  secrethobbies.com\n                  <br /><br />\n                  slapthatpussy.com\n                  <br />\n                  innocentsluts.com\n                  <br />\n                  <br />\n                  actualmeat.com\n                  <br />\n                  actualmeats.com\n                  <br />\n                  duringwhich.com\n                  <br />\n                </div>\n              </div>\n            </div>\n          </div>\n        </h2>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}